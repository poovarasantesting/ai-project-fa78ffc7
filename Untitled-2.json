{
    "id": "4e197802",
    "slug": "create-an-ecommerce-website-with-home-sh",
    "raw_output": "I'll help you create an e-commerce website with all the requested pages. Let me build this step by step for you.\n\n<lov-code>\nLet's create a complete e-commerce website with the following pages:\n1. Home page\n2. Shop page\n3. Product detail page\n4. Cart page\n5. Checkout page\n6. Contact Us page\n\nFirst, I'll create the necessary components, pages, and data structures.\n\n<lov-write file_path=\"src/types.ts\">\nexport interface Product {\n  id: string;\n  name: string;\n  price: number;\n  description: string;\n  imageUrl: string;\n  category: string;\n}\n\nexport interface CartItem {\n  product: Product;\n  quantity: number;\n}\n\nexport interface ShippingDetails {\n  firstName: string;\n  lastName: string;\n  email: string;\n  address: string;\n  city: string;\n  postalCode: string;\n  country: string;\n}\n</lov-write>\n\n<lov-write file_path=\"src/data/products.ts\">\nimport { Product } from \"../types\";\n\nexport const products: Product[] = [\n  {\n    id: \"1\",\n    name: \"Wireless Headphones\",\n    price: 129.99,\n    description: \"Premium wireless headphones with noise cancellation and 30-hour battery life.\",\n    imageUrl: \"https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZHVjdHxlbnwwfHwwfHx8MA%3D%3D\",\n    category: \"electronics\"\n  },\n  {\n    id: \"2\",\n    name: \"Smart Watch\",\n    price: 199.99,\n    description: \"Track your fitness, receive notifications, and more with this stylish smart watch.\",\n    imageUrl: \"https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTB8fHByb2R1Y3R8ZW58MHx8MHx8fDA%3D\",\n    category: \"electronics\"\n  },\n  {\n    id: \"3\",\n    name: \"Laptop Backpack\",\n    price: 59.99,\n    description: \"Water-resistant backpack with padded laptop compartment and multiple pockets.\",\n    imageUrl: \"https://images.unsplash.com/photo-1547949003-9792a18a2601?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8YmFja3BhY2t8ZW58MHx8MHx8fDA%3D\",\n    category: \"accessories\"\n  },\n  {\n    id: \"4\",\n    name: \"Coffee Maker\",\n    price: 89.99,\n    description: \"Programmable coffee maker with thermal carafe to keep your coffee hot for hours.\",\n    imageUrl: \"https://images.unsplash.com/photo-1585037025971-32f387b3d1ff?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8Y29mZmVlJTIwbWFrZXJ8ZW58MHx8MHx8fDA%3D\",\n    category: \"home\"\n  },\n  {\n    id: \"5\",\n    name: \"Fitness Tracker\",\n    price: 79.99,\n    description: \"Track steps, heart rate, sleep quality and more with this advanced fitness band.\",\n    imageUrl: \"https://images.unsplash.com/photo-1576243345690-4e4b79b63288?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8Zml0bmVzcyUyMHRyYWNrZXJ8ZW58MHx8MHx8fDA%3D\",\n    category: \"electronics\"\n  },\n  {\n    id: \"6\",\n    name: \"Wireless Charger\",\n    price: 39.99,\n    description: \"Fast wireless charging pad compatible with all Qi-enabled devices.\",\n    imageUrl: \"https://images.unsplash.com/photo-1586953208448-b95a79798f07?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8d2lyZWxlc3MlMjBjaGFyZ2VyfGVufDB8fDB8fHww\",\n    category: \"electronics\"\n  },\n];\n</lov-write>\n\n<lov-write file_path=\"src/context/CartContext.tsx\">\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\nimport { CartItem, Product } from \"../types\";\nimport { toast } from \"../components/ui/use-toast\";\n\ninterface CartContextType {\n  cartItems: CartItem[];\n  addToCart: (product: Product, quantity?: number) => void;\n  removeFromCart: (productId: string) => void;\n  updateQuantity: (productId: string, quantity: number) => void;\n  clearCart: () => void;\n  totalItems: number;\n  subtotal: number;\n}\n\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\nexport const useCart = (): CartContextType => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n\ninterface CartProviderProps {\n  children: ReactNode;\n}\n\nexport const CartProvider: React.FC<CartProviderProps> = ({ children }) => {\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n\n  // Load cart from localStorage on initial render\n  useEffect(() => {\n    const savedCart = localStorage.getItem(\"cart\");\n    if (savedCart) {\n      try {\n        setCartItems(JSON.parse(savedCart));\n      } catch (error) {\n        console.error(\"Failed to parse cart from localStorage:\", error);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  const addToCart = (product: Product, quantity = 1) => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.product.id === product.id);\n      \n      if (existingItem) {\n        // Update quantity of existing item\n        return prevItems.map(item => \n          item.product.id === product.id \n            ? { ...item, quantity: item.quantity + quantity } \n            : item\n        );\n      } else {\n        // Add new item to cart\n        return [...prevItems, { product, quantity }];\n      }\n    });\n    \n    toast({\n      title: \"Added to cart\",\n      description: `${product.name} has been added to your cart.`,\n    });\n  };\n\n  const removeFromCart = (productId: string) => {\n    setCartItems(prevItems => \n      prevItems.filter(item => item.product.id !== productId)\n    );\n    \n    toast({\n      title: \"Removed from cart\",\n      description: \"Item has been removed from your cart.\",\n    });\n  };\n\n  const updateQuantity = (productId: string, quantity: number) => {\n    if (quantity < 1) {\n      removeFromCart(productId);\n      return;\n    }\n    \n    setCartItems(prevItems => \n      prevItems.map(item => \n        item.product.id === productId \n          ? { ...item, quantity } \n          : item\n      )\n    );\n  };\n\n  const clearCart = () => {\n    setCartItems([]);\n    toast({\n      title: \"Cart cleared\",\n      description: \"All items have been removed from your cart.\",\n    });\n  };\n\n  const totalItems = cartItems.reduce(\n    (total, item) => total + item.quantity, \n    0\n  );\n\n  const subtotal = cartItems.reduce(\n    (total, item) => total + (item.product.price * item.quantity), \n    0\n  );\n\n  return (\n    <CartContext.Provider\n      value={{\n        cartItems,\n        addToCart,\n        removeFromCart,\n        updateQuantity,\n        clearCart,\n        totalItems,\n        subtotal\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n</lov-write>\n\n<lov-write file_path=\"src/components/ui/toast.tsx\">\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n</lov-write>\n\n<lov-write file_path=\"src/components/ui/use-toast.ts\">\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 5\nconst TOAST_REMOVE_DELAY = 5000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: string\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: string\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: ((state: State) => void)[] = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n</lov-write>\n\n<lov-write file_path=\"src/components/ui/toaster.tsx\">\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\nimport { useToast } from \"@/components/ui/use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n</lov-write>\n\n<lov-write file_path=\"src/lib/utils.ts\">\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n \nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n</lov-write>\n\n<lov-write file_path=\"src/components/Navbar.tsx\">\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ShoppingCart } from 'lucide-react';\nimport { useCart } from '../context/CartContext';\n\nconst Navbar: React.FC = () => {\n  const { totalItems } = useCart();\n\n  return (\n    <header className=\"bg-white shadow-sm\">\n      <div className=\"container mx-auto px-4 py-4\">\n        <div className=\"flex items-center justify-between\">\n          <Link to=\"/\" className=\"text-2xl font-bold text-gray-800\">ShopSmart</Link>\n          \n          <nav className=\"hidden md:flex space-x-8\">\n            <Link to=\"/\" className=\"text-gray-600 hover:text-gray-900 font-medium\">Home</Link>\n            <Link to=\"/shop\" className=\"text-gray-600 hover:text-gray-900 font-medium\">Shop</Link>\n            <Link to=\"/contact\" className=\"text-gray-600 hover:text-gray-900 font-medium\">Contact Us</Link>\n          </nav>\n          \n          <div className=\"flex items-center space-x-4\">\n            <Link to=\"/cart\" className=\"relative\">\n              <ShoppingCart className=\"h-6 w-6 text-gray-600 hover:text-gray-900\" />\n              {totalItems > 0 && (\n                <span className=\"absolute -top-2 -right-2 bg-blue-600 text-white text-xs font-bold rounded-full h-5 w-5 flex items-center justify-center\">\n                  {totalItems}\n                </span>\n              )}\n            </Link>\n            \n            <button className=\"block md:hidden\">\n              <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Navbar;\n</lov-write>\n\n<lov-write file_path=\"src/components/Footer.tsx\">\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Facebook, Twitter, Instagram, Mail, Phone, MapPin } from 'lucide-react';\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"bg-gray-900 text-white\">\n      <div className=\"container mx-auto px-4 py-12\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          <div>\n            <h3 className=\"text-xl font-bold mb-4\">ShopSmart</h3>\n            <p className=\"text-gray-400 mb-4\">\n              Your one-stop destination for all your shopping needs. Quality products at the best prices.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a href=\"#\" className=\"text-gray-400 hover:text-white\">\n                <Facebook size={20} />\n              </a>\n              <a href=\"#\" className=\"text-gray-400 hover:text-white\">\n                <Twitter size={20} />\n              </a>\n              <a href=\"#\" className=\"text-gray-400 hover:text-white\">\n                <Instagram size={20} />\n              </a>\n            </div>\n          </div>\n          \n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Quick Links</h3>\n            <ul className=\"space-y-2\">\n              <li><Link to=\"/\" className=\"text-gray-400 hover:text-white\">Home</Link></li>\n              <li><Link to=\"/shop\" className=\"text-gray-400 hover:text-white\">Shop</Link></li>\n              <li><Link to=\"/cart\" className=\"text-gray-400 hover:text-white\">Cart</Link></li>\n              <li><Link to=\"/contact\" className=\"text-gray-400 hover:text-white\">Contact Us</Link></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Categories</h3>\n            <ul className=\"space-y-2\">\n              <li><Link to=\"/shop?category=electronics\" className=\"text-gray-400 hover:text-white\">Electronics</Link></li>\n              <li><Link to=\"/shop?category=accessories\" className=\"text-gray-400 hover:text-white\">Accessories</Link></li>\n              <li><Link to=\"/shop?category=home\" className=\"text-gray-400 hover:text-white\">Home & Kitchen</Link></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Contact Info</h3>\n            <ul className=\"space-y-3\">\n              <li className=\"flex items-start\">\n                <MapPin className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                <span className=\"text-gray-400\">123 Commerce St, Shopville, NY 10001</span>\n              </li>\n              <li className=\"flex items-center\">\n                <Phone className=\"h-5 w-5 text-gray-400 mr-2\" />\n                <span className=\"text-gray-400\">(555) 123-4567</span>\n              </li>\n              <li className=\"flex items-center\">\n                <Mail className=\"h-5 w-5 text-gray-400 mr-2\" />\n                <span className=\"text-gray-400\">info@shopsmart.com</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-gray-800 mt-12 pt-6 text-center text-gray-400\">\n          <p>&copy; {new Date().getFullYear()} ShopSmart. All Rights Reserved.</p>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n</lov-write>\n\n<lov-write file_path=\"src/components/ProductCard.tsx\">\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ShoppingCart } from 'lucide-react';\nimport { Product } from '../types';\nimport { useCart } from '../context/CartContext';\n\ninterface ProductCardProps {\n  product: Product;\n}\n\nconst ProductCard: React.FC<ProductCardProps> = ({ product }) => {\n  const { addToCart } = useCart();\n  \n  return (\n    <div className=\"bg-white rounded-lg shadow-md overflow-hidden transition-transform hover:shadow-lg hover:-translate-y-1\">\n      <Link to={`/product/${product.id}`}>\n        <img \n          src={product.imageUrl} \n          alt={product.name} \n          className=\"w-full h-48 object-cover\"\n        />\n      </Link>\n      <div className=\"p-4\">\n        <Link to={`/product/${product.id}`}>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-1\">{product.name}</h3>\n        </Link>\n        <p className=\"text-xl font-bold text-gray-900 mb-2\">${product.price.toFixed(2)}</p>\n        <p className=\"text-sm text-gray-500 mb-4 line-clamp-2\">{product.description}</p>\n        \n        <button \n          onClick={() => addToCart(product)}\n          className=\"w-full bg-blue-600 text-white py-2 rounded-md flex items-center justify-center hover:bg-blue-700 transition-colors\"\n        >\n          <ShoppingCart className=\"h-4 w-4 mr-2\" />\n          Add to Cart\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n</lov-write>\n\n<lov-write file_path=\"src/components/QuantitySelector.tsx\">\nimport React from 'react';\nimport { Minus, Plus } from 'lucide-react';\n\ninterface QuantitySelectorProps {\n  quantity: number;\n  onIncrease: () => void;\n  onDecrease: () => void;\n  maxWidth?: boolean;\n}\n\nconst QuantitySelector: React.FC<QuantitySelectorProps> = ({ \n  quantity, \n  onIncrease, \n  onDecrease,\n  maxWidth = false\n}) => {\n  return (\n    <div className={`flex items-center border border-gray-300 rounded-md ${maxWidth ? 'w-full' : ''}`}>\n      <button \n        onClick={onDecrease}\n        className=\"px-3 py-1 text-gray-600 hover:bg-gray-100 rounded-l-md\"\n        aria-label=\"Decrease quantity\"\n      >\n        <Minus size={16} />\n      </button>\n      \n      <span className=\"px-4 py-1 text-center text-gray-700 flex-1\">\n        {quantity}\n      </span>\n      \n      <button \n        onClick={onIncrease}\n        className=\"px-3 py-1 text-gray-600 hover:bg-gray-100 rounded-r-md\"\n        aria-label=\"Increase quantity\"\n      >\n        <Plus size={16} />\n      </button>\n    </div>\n  );\n};\n\nexport default QuantitySelector;\n</lov-write>\n\n<lov-write file_path=\"src/pages/HomePage.tsx\">\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ArrowRight, ShieldCheck, Truck, Clock, Star } from 'lucide-react';\nimport { products } from '../data/products';\nimport ProductCard from '../components/ProductCard';\n\nconst HomePage: React.FC = () => {\n  // Get just the first 3 products for the featured section\n  const featuredProducts = products.slice(0, 3);\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-r from-blue-600 to-indigo-700 text-white py-20\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-2xl\">\n            <h1 className=\"text-4xl md:text-5xl font-bold mb-4\">Shop the Latest Trends</h1>\n            <p className=\"text-xl mb-8\">\n              Discover amazing products at competitive prices. \n              From electronics to home goods, we've got everything you need.\n            </p>\n            <div className=\"flex flex-wrap gap-4\">\n              <Link \n                to=\"/shop\" \n                className=\"bg-white text-blue-600 px-6 py-3 rounded-md font-semibold hover:bg-gray-100 transition-colors\"\n              >\n                Shop Now\n              </Link>\n              <Link \n                to=\"/contact\" \n                className=\"bg-transparent border border-white text-white px-6 py-3 rounded-md font-semibold hover:bg-white hover:text-blue-600 transition-colors\"\n              >\n                Contact Us\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"text-3xl font-bold text-center mb-12\">Why Shop With Us</h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            <div className=\"flex flex-col items-center text-center\">\n              <div className=\"bg-blue-100 p-3 rounded-full mb-4\">\n                <Truck className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-2\">Free Shipping</h3>\n              <p className=\"text-gray-600\">On all orders over $50</p>\n            </div>\n            \n            <div className=\"flex flex-col items-center text-center\">\n              <div className=\"bg-blue-100 p-3 rounded-full mb-4\">\n                <ShieldCheck className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-2\">Secure Payments</h3>\n              <p className=\"text-gray-600\">100% secure payment</p>\n            </div>\n            \n            <div className=\"flex flex-col items-center text-center\">\n              <div className=\"bg-blue-100 p-3 rounded-full mb-4\">\n                <Clock className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-2\">30-Day Returns</h3>\n              <p className=\"text-gray-600\">30 days money back guarantee</p>\n            </div>\n            \n            <div className=\"flex flex-col items-center text-center\">\n              <div className=\"bg-blue-100 p-3 rounded-full mb-4\">\n                <Star className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-2\">Quality Products</h3>\n              <p className=\"text-gray-600\">Handpicked items just for you</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Products Section */}\n      <section className=\"py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex justify-between items-center mb-8\">\n            <h2 className=\"text-3xl font-bold\">Featured Products</h2>\n            <Link to=\"/shop\" className=\"text-blue-600 hover:text-blue-800 flex items-center\">\n              View All <ArrowRight size={16} className=\"ml-1\" />\n            </Link>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {featuredProducts.map(product => (\n              <ProductCard key={product.id} product={product} />\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"bg-gray-900 text-white py-16\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-3xl font-bold mb-4\">Ready to Start Shopping?</h2>\n          <p className=\"text-xl text-gray-300 mb-8 max-w-2xl mx-auto\">\n            Join thousands of satisfied customers who have discovered the joy of shopping with us.\n          </p>\n          <Link \n            to=\"/shop\" \n            className=\"bg-blue-600 text-white px-8 py-3 rounded-md font-semibold text-lg hover:bg-blue-700 transition-colors inline-block\"\n          >\n            Explore Our Shop\n          </Link>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default HomePage;\n</lov-write>\n\n<lov-write file_path=\"src/pages/ShopPage.tsx\">\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Filter, Search } from 'lucide-react';\nimport { products } from '../data/products';\nimport ProductCard from '../components/ProductCard';\nimport { Product } from '../types';\n\nconst ShopPage: React.FC = () => {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const categoryParam = queryParams.get('category');\n  \n  const [filteredProducts, setFilteredProducts] = useState<Product[]>(products);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(categoryParam);\n  \n  // Get unique categories from products\n  const categories = Array.from(new Set(products.map(product => product.category)));\n  \n  // Filter products based on search and category\n  useEffect(() => {\n    let results = products;\n    \n    // Filter by category if selected\n    if (selectedCategory) {\n      results = results.filter(product => \n        product.category === selectedCategory\n      );\n    }\n    \n    // Filter by search term\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      results = results.filter(product => \n        product.name.toLowerCase().includes(term) || \n        product.description.toLowerCase().includes(term)\n      );\n    }\n    \n    setFilteredProducts(results);\n  }, [searchTerm, selectedCategory]);\n  \n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-8 text-center\">Shop Our Products</h1>\n      \n      <div className=\"flex flex-col md:flex-row gap-8 mb-8\">\n        {/* Filters Sidebar */}\n        <div className=\"md:w-1/4\">\n          <div className=\"bg-white rounded-lg shadow-md p-6 sticky top-4\">\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-semibold mb-3 flex items-center\">\n                <Filter className=\"h-5 w-5 mr-2\" />\n                Filters\n              </h3>\n              \n              <div className=\"mb-4\">\n                <label htmlFor=\"search\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Search\n                </label>\n                <div className=\"relative\">\n                  <input\n                    type=\"text\"\n                    id=\"search\"\n                    placeholder=\"Search products...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"w-full p-2 border border-gray-300 rounded-md pl-9 focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                  <Search className=\"absolute left-3 top-2.5 h-4 w-4 text-gray-400\" />\n                </div>\n              </div>\n              \n              <div>\n                <h4 className=\"font-medium mb-2\">Categories</h4>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center\">\n                    <input\n                      type=\"radio\"\n                      id=\"all\"\n                      name=\"category\"\n                      checked={selectedCategory === null}\n                      onChange={() => setSelectedCategory(null)}\n                      className=\"h-4 w-4 text-blue-600 focus:ring-blue-500\"\n                    />\n                    <label htmlFor=\"all\" className=\"ml-2 text-gray-700\">\n                      All Categories\n                    </label>\n                  </div>\n                  \n                  {categories.map(category => (\n                    <div key={category} className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        id={category}\n                        name=\"category\"\n                        checked={selectedCategory === category}\n                        onChange={() => setSelectedCategory(category)}\n                        className=\"h-4 w-4 text-blue-600 focus:ring-blue-500\"\n                      />\n                      <label htmlFor={category} className=\"ml-2 text-gray-700 capitalize\">\n                        {category}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Products Grid */}\n        <div className=\"md:w-3/4\">\n          {filteredProducts.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <h3 className=\"text-xl font-medium text-gray-900 mb-2\">No products found</h3>\n              <p className=\"text-gray-500\">Try adjusting your search or filter to find what you're looking for.</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {filteredProducts.map(product => (\n                <ProductCard key={product.id} product={product} />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ShopPage;\n</lov-write>\n\n<lov-write file_path=\"src/pages/ProductDetailPage.tsx\">\nimport React, { useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { ShoppingCart, Shield, ArrowLeft, Truck } from 'lucide-react';\nimport { useCart } from '../context/CartContext';\nimport { products } from '../data/products';\nimport QuantitySelector from '../components/QuantitySelector';\n\nconst ProductDetailPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const { addToCart } = useCart();\n  \n  const [quantity, setQuantity] = useState(1);\n  \n  // Find the product with the matching ID\n  const product = products.find(p => p.id === id);\n  \n  // If product not found, show error message\n  if (!product) {\n    return (\n      <div className=\"container mx-auto px-4 py-16 text-center\">\n        <h1 className=\"text-2xl font-bold mb-4\">Product Not Found</h1>\n        <p className=\"mb-8\">Sorry, the product you're looking for doesn't exist.</p>\n        <Link \n          to=\"/shop\" \n          className=\"inline-flex items-center text-blue-600 font-medium hover:text-blue-800\"\n        >\n          <ArrowLeft className=\"h-4 w-4 mr-2\" /> Return to Shop\n        </Link>\n      </div>\n    );\n  }\n  \n  // Handle quantity change\n  const handleIncrease = () => setQuantity(q => q + 1);\n  const handleDecrease = () => setQuantity(q => (q > 1 ? q - 1 : 1));\n  \n  // Add to cart with specified quantity\n  const handleAddToCart = () => {\n    addToCart(product, quantity);\n  };\n  \n  // Buy now - add to cart and go to cart page\n  const handleBuyNow = () => {\n    addToCart(product, quantity);\n    navigate('/cart');\n  };\n  \n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <Link \n        to=\"/shop\" \n        className=\"inline-flex items-center text-gray-600 hover:text-gray-900 mb-6\"\n      >\n        <ArrowLeft className=\"h-4 w-4 mr-2\" /> Back to Shop\n      </Link>\n      \n      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n        <div className=\"md:flex\">\n          {/* Product Image */}\n          <div className=\"md:w-1/2\">\n            <img \n              src={product.imageUrl} \n              alt={product.name}\n              className=\"w-full h-96 object-cover object-center\"\n            />\n          </div>\n          \n          {/* Product Details */}\n          <div className=\"md:w-1/2 p-8\">\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">{product.name}</h1>\n            <p className=\"text-3xl font-bold text-gray-900 mb-4\">${product.price.toFixed(2)}</p>\n            \n            <div className=\"mb-6\">\n              <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Description</h3>\n              <p className=\"text-gray-700\">{product.description}</p>\n            </div>\n            \n            <div className=\"mb-6\">\n              <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Category</h3>\n              <p className=\"text-gray-700 capitalize\">{product.category}</p>\n            </div>\n            \n            <div className=\"mb-6\">\n              <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Quantity</h3>\n              <QuantitySelector \n                quantity={quantity}\n                onIncrease={handleIncrease}\n                onDecrease={handleDecrease}\n              />\n            </div>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 mb-8\">\n              <button\n                onClick={handleAddToCart}\n                className=\"flex-1 bg-white border border-blue-600 text-blue-600 py-2 px-4 rounded-md font-medium hover:bg-blue-50 transition-colors flex items-center justify-center\"\n              >\n                <ShoppingCart className=\"h-5 w-5 mr-2\" />\n                Add to Cart\n              </button>\n              \n              <button\n                onClick={handleBuyNow}\n                className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-md font-medium hover:bg-blue-700 transition-colors\"\n              >\n                Buy Now\n              </button>\n            </div>\n            \n            <div className=\"border-t border-gray-200 pt-6\">\n              <div className=\"flex items-center mb-3\">\n                <Shield className=\"h-5 w-5 text-green-600 mr-2\" />\n                <span className=\"text-sm text-gray-700\">Secure payment processing</span>\n              </div>\n              <div className=\"flex items-center\">\n                <Truck className=\"h-5 w-5 text-green-600 mr-2\" />\n                <span className=\"text-sm text-gray-700\">Free shipping on orders over $50</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductDetailPage;\n</lov-write>\n\n<lov-write file_path=\"src/pages/CartPage.tsx\">\nimport React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Trash2, ShoppingBag, ArrowRight } from 'lucide-react';\nimport { useCart } from '../context/CartContext';\nimport QuantitySelector from '../components/QuantitySelector';\n\nconst CartPage: React.FC = () => {\n  const { cartItems, removeFromCart, updateQuantity, clearCart, subtotal } = useCart();\n  const navigate = useNavigate();\n  \n  const handleCheckout = () => {\n    if (cartItems.length > 0) {\n      navigate('/checkout');\n    }\n  };\n  \n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-8 text-center\">Shopping Cart</h1>\n      \n      {cartItems.length === 0 ? (\n        <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\n          <div className=\"mb-6 flex justify-center\">\n            <ShoppingBag className=\"h-16 w-16 text-gray-400\" />\n          </div>\n          <h2 className=\"text-2xl font-medium text-gray-900 mb-2\">Your cart is empty</h2>\n          <p className=\"text-gray-600 mb-6\">\n            Looks like you haven't added anything to your cart yet.\n          </p>\n          <Link \n            to=\"/shop\" \n            className=\"inline-flex items-center justify-center bg-blue-600 text-white px-6 py-3 rounded-md font-medium hover:bg-blue-700 transition-colors\"\n          >\n            Start Shopping\n          </Link>\n        </div>\n      ) : (\n        <div className=\"flex flex-col lg:flex-row gap-8\">\n          {/* Cart Items */}\n          <div className=\"lg:w-2/3\">\n            <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n              <ul className=\"divide-y divide-gray-200\">\n                {cartItems.map(item => (\n                  <li key={item.product.id} className=\"p-6 flex flex-col sm:flex-row\">\n                    <div className=\"sm:flex-shrink-0 mb-4 sm:mb-0\">\n                      <img \n                        src={item.product.imageUrl} \n                        alt={item.product.name} \n                        className=\"w-full sm:w-24 h-24 object-cover rounded-md\"\n                      />\n                    </div>\n                    \n                    <div className=\"sm:ml-6 flex-1 flex flex-col justify-between\">\n                      <div>\n                        <div className=\"flex justify-between\">\n                          <h3 className=\"text-lg font-medium text-gray-900\">\n                            <Link to={`/product/${item.product.id}`}>\n                              {item.product.name}\n                            </Link>\n                          </h3>\n                          <p className=\"text-lg font-medium text-gray-900\">\n                            ${(item.product.price * item.quantity).toFixed(2)}\n                          </p>\n                        </div>\n                        <p className=\"mt-1 text-sm text-gray-500\">{item.product.category}</p>\n                      </div>\n                      \n                      <div className=\"mt-4 flex items-center justify-between\">\n                        <div className=\"flex-1 max-w-[120px]\">\n                          <QuantitySelector \n                            quantity={item.quantity}\n                            onIncrease={() => updateQuantity(item.product.id, item.quantity + 1)}\n                            onDecrease={() => updateQuantity(item.product.id, item.quantity - 1)}\n                            maxWidth\n                          />\n                        </div>\n                        \n                        <button \n                          onClick={() => removeFromCart(item.product.id)}\n                          className=\"text-red-500 hover:text-red-700 flex items-center\"\n                        >\n                          <Trash2 className=\"h-5 w-5\" />\n                          <span className=\"ml-1 text-sm hidden sm:inline\">Remove</span>\n                        </button>\n                      </div>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n              \n              <div className=\"px-6 py-4 border-t border-gray-200\">\n                <button \n                  onClick={clearCart}\n                  className=\"text-sm text-red-600 hover:text-red-800\"\n                >\n                  Clear Cart\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          {/* Order Summary */}\n          <div className=\"lg:w-1/3\">\n            <div className=\"bg-white rounded-lg shadow-md p-6 sticky top-4\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-6\">Order Summary</h2>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex justify-between\">\n                  <p className=\"text-gray-600\">Subtotal</p>\n                  <p className=\"text-gray-900 font-medium\">${subtotal.toFixed(2)}</p>\n                </div>\n                \n                <div className=\"flex justify-between\">\n                  <p className=\"text-gray-600\">Shipping</p>\n                  <p className=\"text-gray-900 font-medium\">\n                    {subtotal >= 50 ? 'Free' : '$5.00'}\n                  </p>\n                </div>\n                \n                <div className=\"border-t border-gray-200 pt-4 flex justify-between\">\n                  <p className=\"text-gray-900 font-medium\">Total</p>\n                  <p className=\"text-xl text-gray-900 font-bold\">\n                    ${(subtotal >= 50 ? subtotal : subtotal + 5).toFixed(2)}\n                  </p>\n                </div>\n              </div>\n              \n              <button \n                onClick={handleCheckout}\n                className=\"mt-6 w-full bg-blue-600 text-white py-3 px-4 rounded-md font-medium hover:bg-blue-700 transition-colors flex items-center justify-center\"\n              >\n                Proceed to Checkout\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </button>\n              \n              <div className=\"mt-6\">\n                <Link \n                  to=\"/shop\" \n                  className=\"text-blue-600 hover:text-blue-800 text-sm flex items-center justify-center\"\n                >\n                  Continue Shopping\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CartPage;\n</lov-write>\n\n<lov-write file_path=\"src/pages/CheckoutPage.tsx\">\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CreditCard, ShieldCheck } from 'lucide-react';\nimport { useCart } from '../context/CartContext';\nimport { ShippingDetails } from '../types';\nimport { toast } from '../components/ui/use-toast';\n\nconst CheckoutPage: React.FC = () => {\n  const { cartItems, subtotal, clearCart } = useCart();\n  const navigate = useNavigate();\n  \n  const shipping = subtotal >= 50 ? 0 : 5;\n  const total = subtotal + shipping;\n  \n  const [shippingDetails, setShippingDetails] = useState<ShippingDetails>({\n    firstName: '',\n    lastName: '',\n    email: '',\n    address: '',\n    city: '',\n    postalCode: '',\n    country: '',\n  });\n  \n  const [paymentDetails, setPaymentDetails] = useState({\n    cardNumber: '',\n    cardName: '',\n    expiry: '',\n    cvv: '',\n  });\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  // Redirect to home if cart is empty\n  React.useEffect(() => {\n    if (cartItems.length === 0) {\n      navigate('/');\n    }\n  }, [cartItems, navigate]);\n  \n  const handleShippingChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setShippingDetails(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const handlePaymentChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setPaymentDetails(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    // Simulate checkout process\n    setTimeout(() => {\n      // Process successful checkout\n      clearCart();\n      toast({\n        title: \"Order Placed Successfully!\",\n        description: \"Your order has been placed. Thank you for shopping with us!\",\n      });\n      navigate('/');\n      setIsSubmitting(false);\n    }, 1500);\n  };\n  \n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-8 text-center\">Checkout</h1>\n      \n      <div className=\"flex flex-col lg:flex-row gap-8\">\n        {/* Checkout Form */}\n        <div className=\"lg:w-2/3\">\n          <form onSubmit={handleSubmit}>\n            {/* Shipping Information */}\n            <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n              <h2 className=\"text-xl font-medium text-gray-900 mb-4\">Shipping Information</h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    First Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    required\n                    value={shippingDetails.firstName}\n                    onChange={handleShippingChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Last Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    required\n                    value={shippingDetails.lastName}\n                    onChange={handleShippingChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email Address\n                  </label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    required\n                    value={shippingDetails.email}\n                    onChange={handleShippingChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Address\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"address\"\n                    name=\"address\"\n                    required\n                    value={shippingDetails.address}\n                    onChange={handleShippingChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    City\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"city\"\n                    name=\"city\"\n                    required\n                    value={shippingDetails.city}\n                    onChange={handleShippingChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"postalCode\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Postal Code\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"postalCode\"\n                    name=\"postalCode\"\n                    required\n                    value={shippingDetails.postalCode}\n                    onChange={handleShippingChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"country\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Country\n                  </label>\n                  <select\n                    id=\"country\"\n                    name=\"country\"\n                    required\n                    value={shippingDetails.country}\n                    onChange={handleShippingChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  >\n                    <option value=\"\">Select Country</option>\n                    <option value=\"us\">United States</option>\n                    <option value=\"ca\">Canada</option>\n                    <option value=\"uk\">United Kingdom</option>\n                    <option value=\"au\">Australia</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            \n            {/* Payment Information */}\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\n              <h2 className=\"text-xl font-medium text-gray-900 mb-4 flex items-center\">\n                <CreditCard className=\"h-5 w-5 mr-2 text-blue-500\" />\n                Payment Information\n              </h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"cardNumber\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Card Number\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"cardNumber\"\n                    name=\"cardNumber\"\n                    placeholder=\"XXXX XXXX XXXX XXXX\"\n                    required\n                    value={paymentDetails.cardNumber}\n                    onChange={handlePaymentChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"cardName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Name on Card\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"cardName\"\n                    name=\"cardName\"\n                    required\n                    value={paymentDetails.cardName}\n                    onChange={handlePaymentChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"expiry\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Expiry Date (MM/YY)\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"expiry\"\n                    name=\"expiry\"\n                    placeholder=\"MM/YY\"\n                    required\n                    value={paymentDetails.expiry}\n                    onChange={handlePaymentChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"cvv\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    CVV\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"cvv\"\n                    name=\"cvv\"\n                    placeholder=\"XXX\"\n                    required\n                    value={paymentDetails.cvv}\n                    onChange={handlePaymentChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"mt-6 flex items-center text-sm text-gray-500\">\n                <ShieldCheck className=\"h-5 w-5 mr-2 text-green-500\" />\n                Your payment information is secure and encrypted\n              </div>\n            </div>\n            \n            <div className=\"mt-6 lg:hidden\">\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-md font-medium hover:bg-blue-700 transition-colors disabled:bg-blue-400 disabled:cursor-not-allowed\"\n              >\n                {isSubmitting ? 'Processing...' : `Complete Order • $${total.toFixed(2)}`}\n              </button>\n            </div>\n          </form>\n        </div>\n        \n        {/* Order Summary */}\n        <div className=\"lg:w-1/3\">\n          <div className=\"bg-white rounded-lg shadow-md p-6 sticky top-4\">\n            <h2 className=\"text-xl font-medium text-gray-900 mb-4\">Order Summary</h2>\n            \n            <ul className=\"mb-4 divide-y divide-gray-200\">\n              {cartItems.map(item => (\n                <li key={item.product.id} className=\"py-3 flex justify-between\">\n                  <div>\n                    <p className=\"text-gray-900\">{item.product.name}</p>\n                    <p className=\"text-gray-500 text-sm\">Qty: {item.quantity}</p>\n                  </div>\n                  <span className=\"text-gray-900 font-medium\">\n                    ${(item.product.price * item.quantity).toFixed(2)}\n                  </span>\n                </li>\n              ))}\n            </ul>\n            \n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between\">\n                <p className=\"text-gray-600\">Subtotal</p>\n                <p className=\"text-gray-900 font-medium\">${subtotal.toFixed(2)}</p>\n              </div>\n              \n              <div className=\"flex justify-between\">\n                <p className=\"text-gray-600\">Shipping</p>\n                <p className=\"text-gray-900 font-medium\">\n                  {shipping === 0 ? 'Free' : `$${shipping.toFixed(2)}`}\n                </p>\n              </div>\n              \n              <div className=\"border-t border-gray-200 pt-3 flex justify-between\">\n                <p className=\"text-gray-900 font-medium\">Total</p>\n                <p className=\"text-xl text-gray-900 font-bold\">\n                  ${total.toFixed(2)}\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"mt-6 hidden lg:block\">\n              <button\n                type=\"submit\"\n                form=\"checkout-form\"\n                disabled={isSubmitting}\n                className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-md font-medium hover:bg-blue-700 transition-colors disabled:bg-blue-400 disabled:cursor-not-allowed\"\n              >\n                {isSubmitting ? 'Processing...' : 'Complete Order'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutPage;\n</lov-write>\n\n<lov-write file_path=\"src/pages/ContactPage.tsx\">\nimport React, { useState } from 'react';\nimport { Mail, Phone, MapPin, Send } from 'lucide-react';\nimport { toast } from '../components/ui/use-toast';\n\nconst ContactPage: React.FC = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    // Simulate form submission\n    setTimeout(() => {\n      toast({\n        title: \"Message Sent\",\n        description: \"Thanks for reaching out! We'll get back to you soon.\",\n      });\n      \n      // Reset form\n      setFormData({\n        name: '',\n        email: '',\n        subject: '',\n        message: ''\n      });\n      \n      setIsSubmitting(false);\n    }, 1000);\n  };\n  \n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-2 text-center\">Contact Us</h1>\n      <p className=\"text-gray-600 mb-8 text-center max-w-xl mx-auto\">\n        Get in touch with our team for any questions, feedback, or support needs. We're here to help!\n      </p>\n      \n      <div className=\"flex flex-col lg:flex-row gap-8\">\n        {/* Contact Information */}\n        <div className=\"lg:w-1/3\">\n          <div className=\"bg-blue-600 text-white rounded-lg shadow-md p-8 h-full\">\n            <h2 className=\"text-2xl font-bold mb-6\">Contact Information</h2>\n            \n            <div className=\"space-y-6\">\n              <div className=\"flex items-start\">\n                <MapPin className=\"h-6 w-6 mr-4 mt-0.5\" />\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Our Location</h3>\n                  <p>123 Commerce St, Shopville, NY 10001, United States</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <Phone className=\"h-6 w-6 mr-4 mt-0.5\" />\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Phone Number</h3>\n                  <p>(555) 123-4567</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <Mail className=\"h-6 w-6 mr-4 mt-0.5\" />\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Email Address</h3>\n                  <p>info@shopsmart.com</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"mt-12\">\n              <h3 className=\"font-semibold mb-4\">Business Hours</h3>\n              <ul className=\"space-y-2\">\n                <li className=\"flex justify-between\">\n                  <span>Monday - Friday:</span>\n                  <span>9:00 AM - 8:00 PM</span>\n                </li>\n                <li className=\"flex justify-between\">\n                  <span>Saturday:</span>\n                  <span>10:00 AM - 6:00 PM</span>\n                </li>\n                <li className=\"flex justify-between\">\n                  <span>Sunday:</span>\n                  <span>Closed</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        \n        {/* Contact Form */}\n        <div className=\"lg:w-2/3\">\n          <div className=\"bg-white rounded-lg shadow-md p-8\">\n            <h2 className=\"text-2xl font-bold mb-6\">Send Us a Message</h2>\n            \n            <form onSubmit={handleSubmit}>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                <div>\n                  <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Your Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    required\n                    value={formData.name}\n                    onChange={handleChange}\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email Address\n                  </label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    required\n                    value={formData.email}\n                    onChange={handleChange}\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"subject\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Subject\n                  </label>\n                  <select\n                    id=\"subject\"\n                    name=\"subject\"\n                    required\n                    value={formData.subject}\n                    onChange={handleChange}\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  >\n                    <option value=\"\">Select a subject</option>\n                    <option value=\"order\">Order Inquiry</option>\n                    <option value=\"product\">Product Information</option>\n                    <option value=\"return\">Returns & Refunds</option>\n                    <option value=\"support\">Technical Support</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Message\n                  </label>\n                  <textarea\n                    id=\"message\"\n                    name=\"message\"\n                    rows={6}\n                    required\n                    value={formData.message}\n                    onChange={handleChange}\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  ></textarea>\n                </div>\n              </div>\n              \n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"bg-blue-600 text-white py-3 px-6 rounded-md font-medium hover:bg-blue-700 transition-colors flex items-center justify-center disabled:bg-blue-400 disabled:cursor-not-allowed\"\n              >\n                {isSubmitting ? (\n                  'Sending...'\n                ) : (\n                  <>\n                    <Send className=\"h-4 w-4 mr-2\" />\n                    Send Message\n                  </>\n                )}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n      \n      {/* Map Section */}\n      <div className=\"mt-12 bg-white rounded-lg shadow-md p-6\">\n        <h2 className=\"text-2xl font-bold mb-6\">Find Us</h2>\n        <div className=\"aspect-video bg-gray-200 rounded-md\">\n          {/* Placeholder for map - in a real app, you would embed Google Maps or similar here */}\n          <div className=\"h-full w-full flex items-center justify-center\">\n            <MapPin className=\"h-12 w-12 text-gray-400 mr-2\" />\n            <span className=\"text-xl text-gray-500\">Map Placeholder</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactPage;\n</lov-write>\n\n<lov-write file_path=\"src/App.tsx\">\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { CartProvider } from './context/CartContext';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport ShopPage from './pages/ShopPage';\nimport ProductDetailPage from './pages/ProductDetailPage';\nimport CartPage from './pages/CartPage';\nimport CheckoutPage from './pages/CheckoutPage';\nimport ContactPage from './pages/ContactPage';\nimport { Toaster } from './components/ui/toaster';\n\nfunction App() {\n  return (\n    <Router>\n      <CartProvider>\n        <div className=\"flex flex-col min-h-screen bg-gray-50\">\n          <Navbar />\n          \n          <main className=\"flex-grow\">\n            <Routes>\n              <Route path=\"/\" element={<HomePage />} />\n              <Route path=\"/shop\" element={<ShopPage />} />\n              <Route path=\"/product/:id\" element={<ProductDetailPage />} />\n              <Route path=\"/cart\" element={<CartPage />} />\n              <Route path=\"/checkout\" element={<CheckoutPage />} />\n              <Route path=\"/contact\" element={<ContactPage />} />\n            </Routes>\n          </main>\n          \n          <Footer />\n          <Toaster />\n        </div>\n      </CartProvider>\n    </Router>\n  );\n}\n\nexport default App;\n</lov-write>\n\n<lov-add-dependency>@radix-ui/react-toast</lov-add-dependency>\n<lov-add-dependency>class-variance-authority</lov-add-dependency>\n<lov-add-dependency>clsx</lov-add-dependency>\n<lov-add-dependency>tailwind-merge</lov-add-dependency>\n</lov-code>\n\nI've created a complete e-commerce website with home, shop, product detail, cart, checkout, and contact pages.",
    "files": [
        {
            "path": "src/types.ts",
            "content": "export interface Product {\n  id: string;\n  name: string;\n  price: number;\n  description: string;\n  imageUrl: string;\n  category: string;\n}\n\nexport interface CartItem {\n  product: Product;\n  quantity: number;\n}\n\nexport interface ShippingDetails {\n  firstName: string;\n  lastName: string;\n  email: string;\n  address: string;\n  city: string;\n  postalCode: string;\n  country: string;\n}"
        },
        {
            "path": "src/data/products.ts",
            "content": "import { Product } from \"../types\";\n\nexport const products: Product[] = [\n  {\n    id: \"1\",\n    name: \"Wireless Headphones\",\n    price: 129.99,\n    description: \"Premium wireless headphones with noise cancellation and 30-hour battery life.\",\n    imageUrl: \"https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZHVjdHxlbnwwfHwwfHx8MA%3D%3D\",\n    category: \"electronics\"\n  },\n  {\n    id: \"2\",\n    name: \"Smart Watch\",\n    price: 199.99,\n    description: \"Track your fitness, receive notifications, and more with this stylish smart watch.\",\n    imageUrl: \"https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTB8fHByb2R1Y3R8ZW58MHx8MHx8fDA%3D\",\n    category: \"electronics\"\n  },\n  {\n    id: \"3\",\n    name: \"Laptop Backpack\",\n    price: 59.99,\n    description: \"Water-resistant backpack with padded laptop compartment and multiple pockets.\",\n    imageUrl: \"https://images.unsplash.com/photo-1547949003-9792a18a2601?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8YmFja3BhY2t8ZW58MHx8MHx8fDA%3D\",\n    category: \"accessories\"\n  },\n  {\n    id: \"4\",\n    name: \"Coffee Maker\",\n    price: 89.99,\n    description: \"Programmable coffee maker with thermal carafe to keep your coffee hot for hours.\",\n    imageUrl: \"https://images.unsplash.com/photo-1585037025971-32f387b3d1ff?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8Y29mZmVlJTIwbWFrZXJ8ZW58MHx8MHx8fDA%3D\",\n    category: \"home\"\n  },\n  {\n    id: \"5\",\n    name: \"Fitness Tracker\",\n    price: 79.99,\n    description: \"Track steps, heart rate, sleep quality and more with this advanced fitness band.\",\n    imageUrl: \"https://images.unsplash.com/photo-1576243345690-4e4b79b63288?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8Zml0bmVzcyUyMHRyYWNrZXJ8ZW58MHx8MHx8fDA%3D\",\n    category: \"electronics\"\n  },\n  {\n    id: \"6\",\n    name: \"Wireless Charger\",\n    price: 39.99,\n    description: \"Fast wireless charging pad compatible with all Qi-enabled devices.\",\n    imageUrl: \"https://images.unsplash.com/photo-1586953208448-b95a79798f07?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8d2lyZWxlc3MlMjBjaGFyZ2VyfGVufDB8fDB8fHww\",\n    category: \"electronics\"\n  },\n];"
        },
        {
            "path": "src/context/CartContext.tsx",
            "content": "import React, { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\nimport { CartItem, Product } from \"../types\";\nimport { toast } from \"../components/ui/use-toast\";\n\ninterface CartContextType {\n  cartItems: CartItem[];\n  addToCart: (product: Product, quantity?: number) => void;\n  removeFromCart: (productId: string) => void;\n  updateQuantity: (productId: string, quantity: number) => void;\n  clearCart: () => void;\n  totalItems: number;\n  subtotal: number;\n}\n\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\nexport const useCart = (): CartContextType => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n\ninterface CartProviderProps {\n  children: ReactNode;\n}\n\nexport const CartProvider: React.FC<CartProviderProps> = ({ children }) => {\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n\n  // Load cart from localStorage on initial render\n  useEffect(() => {\n    const savedCart = localStorage.getItem(\"cart\");\n    if (savedCart) {\n      try {\n        setCartItems(JSON.parse(savedCart));\n      } catch (error) {\n        console.error(\"Failed to parse cart from localStorage:\", error);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  const addToCart = (product: Product, quantity = 1) => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.product.id === product.id);\n      \n      if (existingItem) {\n        // Update quantity of existing item\n        return prevItems.map(item => \n          item.product.id === product.id \n            ? { ...item, quantity: item.quantity + quantity } \n            : item\n        );\n      } else {\n        // Add new item to cart\n        return [...prevItems, { product, quantity }];\n      }\n    });\n    \n    toast({\n      title: \"Added to cart\",\n      description: `${product.name} has been added to your cart.`,\n    });\n  };\n\n  const removeFromCart = (productId: string) => {\n    setCartItems(prevItems => \n      prevItems.filter(item => item.product.id !== productId)\n    );\n    \n    toast({\n      title: \"Removed from cart\",\n      description: \"Item has been removed from your cart.\",\n    });\n  };\n\n  const updateQuantity = (productId: string, quantity: number) => {\n    if (quantity < 1) {\n      removeFromCart(productId);\n      return;\n    }\n    \n    setCartItems(prevItems => \n      prevItems.map(item => \n        item.product.id === productId \n          ? { ...item, quantity } \n          : item\n      )\n    );\n  };\n\n  const clearCart = () => {\n    setCartItems([]);\n    toast({\n      title: \"Cart cleared\",\n      description: \"All items have been removed from your cart.\",\n    });\n  };\n\n  const totalItems = cartItems.reduce(\n    (total, item) => total + item.quantity, \n    0\n  );\n\n  const subtotal = cartItems.reduce(\n    (total, item) => total + (item.product.price * item.quantity), \n    0\n  );\n\n  return (\n    <CartContext.Provider\n      value={{\n        cartItems,\n        addToCart,\n        removeFromCart,\n        updateQuantity,\n        clearCart,\n        totalItems,\n        subtotal\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};"
        },
        {
            "path": "src/components/ui/toast.tsx",
            "content": "import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}"
        },
        {
            "path": "src/components/ui/use-toast.ts",
            "content": "import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 5\nconst TOAST_REMOVE_DELAY = 5000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: string\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: string\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: ((state: State) => void)[] = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }"
        },
        {
            "path": "src/components/ui/toaster.tsx",
            "content": "import {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\nimport { useToast } from \"@/components/ui/use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}"
        },
        {
            "path": "src/lib/utils.ts",
            "content": "import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n \nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}"
        },
        {
            "path": "src/components/Navbar.tsx",
            "content": "import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ShoppingCart } from 'lucide-react';\nimport { useCart } from '../context/CartContext';\n\nconst Navbar: React.FC = () => {\n  const { totalItems } = useCart();\n\n  return (\n    <header className=\"bg-white shadow-sm\">\n      <div className=\"container mx-auto px-4 py-4\">\n        <div className=\"flex items-center justify-between\">\n          <Link to=\"/\" className=\"text-2xl font-bold text-gray-800\">ShopSmart</Link>\n          \n          <nav className=\"hidden md:flex space-x-8\">\n            <Link to=\"/\" className=\"text-gray-600 hover:text-gray-900 font-medium\">Home</Link>\n            <Link to=\"/shop\" className=\"text-gray-600 hover:text-gray-900 font-medium\">Shop</Link>\n            <Link to=\"/contact\" className=\"text-gray-600 hover:text-gray-900 font-medium\">Contact Us</Link>\n          </nav>\n          \n          <div className=\"flex items-center space-x-4\">\n            <Link to=\"/cart\" className=\"relative\">\n              <ShoppingCart className=\"h-6 w-6 text-gray-600 hover:text-gray-900\" />\n              {totalItems > 0 && (\n                <span className=\"absolute -top-2 -right-2 bg-blue-600 text-white text-xs font-bold rounded-full h-5 w-5 flex items-center justify-center\">\n                  {totalItems}\n                </span>\n              )}\n            </Link>\n            \n            <button className=\"block md:hidden\">\n              <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Navbar;"
        },
        {
            "path": "src/components/Footer.tsx",
            "content": "import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Facebook, Twitter, Instagram, Mail, Phone, MapPin } from 'lucide-react';\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"bg-gray-900 text-white\">\n      <div className=\"container mx-auto px-4 py-12\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          <div>\n            <h3 className=\"text-xl font-bold mb-4\">ShopSmart</h3>\n            <p className=\"text-gray-400 mb-4\">\n              Your one-stop destination for all your shopping needs. Quality products at the best prices.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a href=\"#\" className=\"text-gray-400 hover:text-white\">\n                <Facebook size={20} />\n              </a>\n              <a href=\"#\" className=\"text-gray-400 hover:text-white\">\n                <Twitter size={20} />\n              </a>\n              <a href=\"#\" className=\"text-gray-400 hover:text-white\">\n                <Instagram size={20} />\n              </a>\n            </div>\n          </div>\n          \n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Quick Links</h3>\n            <ul className=\"space-y-2\">\n              <li><Link to=\"/\" className=\"text-gray-400 hover:text-white\">Home</Link></li>\n              <li><Link to=\"/shop\" className=\"text-gray-400 hover:text-white\">Shop</Link></li>\n              <li><Link to=\"/cart\" className=\"text-gray-400 hover:text-white\">Cart</Link></li>\n              <li><Link to=\"/contact\" className=\"text-gray-400 hover:text-white\">Contact Us</Link></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Categories</h3>\n            <ul className=\"space-y-2\">\n              <li><Link to=\"/shop?category=electronics\" className=\"text-gray-400 hover:text-white\">Electronics</Link></li>\n              <li><Link to=\"/shop?category=accessories\" className=\"text-gray-400 hover:text-white\">Accessories</Link></li>\n              <li><Link to=\"/shop?category=home\" className=\"text-gray-400 hover:text-white\">Home & Kitchen</Link></li>\n            </ul>\n          </div>\n          \n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Contact Info</h3>\n            <ul className=\"space-y-3\">\n              <li className=\"flex items-start\">\n                <MapPin className=\"h-5 w-5 text-gray-400 mr-2 mt-0.5\" />\n                <span className=\"text-gray-400\">123 Commerce St, Shopville, NY 10001</span>\n              </li>\n              <li className=\"flex items-center\">\n                <Phone className=\"h-5 w-5 text-gray-400 mr-2\" />\n                <span className=\"text-gray-400\">(555) 123-4567</span>\n              </li>\n              <li className=\"flex items-center\">\n                <Mail className=\"h-5 w-5 text-gray-400 mr-2\" />\n                <span className=\"text-gray-400\">info@shopsmart.com</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n        \n        <div className=\"border-t border-gray-800 mt-12 pt-6 text-center text-gray-400\">\n          <p>&copy; {new Date().getFullYear()} ShopSmart. All Rights Reserved.</p>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;"
        },
        {
            "path": "src/components/ProductCard.tsx",
            "content": "import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ShoppingCart } from 'lucide-react';\nimport { Product } from '../types';\nimport { useCart } from '../context/CartContext';\n\ninterface ProductCardProps {\n  product: Product;\n}\n\nconst ProductCard: React.FC<ProductCardProps> = ({ product }) => {\n  const { addToCart } = useCart();\n  \n  return (\n    <div className=\"bg-white rounded-lg shadow-md overflow-hidden transition-transform hover:shadow-lg hover:-translate-y-1\">\n      <Link to={`/product/${product.id}`}>\n        <img \n          src={product.imageUrl} \n          alt={product.name} \n          className=\"w-full h-48 object-cover\"\n        />\n      </Link>\n      <div className=\"p-4\">\n        <Link to={`/product/${product.id}`}>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-1\">{product.name}</h3>\n        </Link>\n        <p className=\"text-xl font-bold text-gray-900 mb-2\">${product.price.toFixed(2)}</p>\n        <p className=\"text-sm text-gray-500 mb-4 line-clamp-2\">{product.description}</p>\n        \n        <button \n          onClick={() => addToCart(product)}\n          className=\"w-full bg-blue-600 text-white py-2 rounded-md flex items-center justify-center hover:bg-blue-700 transition-colors\"\n        >\n          <ShoppingCart className=\"h-4 w-4 mr-2\" />\n          Add to Cart\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;"
        },
        {
            "path": "src/components/QuantitySelector.tsx",
            "content": "import React from 'react';\nimport { Minus, Plus } from 'lucide-react';\n\ninterface QuantitySelectorProps {\n  quantity: number;\n  onIncrease: () => void;\n  onDecrease: () => void;\n  maxWidth?: boolean;\n}\n\nconst QuantitySelector: React.FC<QuantitySelectorProps> = ({ \n  quantity, \n  onIncrease, \n  onDecrease,\n  maxWidth = false\n}) => {\n  return (\n    <div className={`flex items-center border border-gray-300 rounded-md ${maxWidth ? 'w-full' : ''}`}>\n      <button \n        onClick={onDecrease}\n        className=\"px-3 py-1 text-gray-600 hover:bg-gray-100 rounded-l-md\"\n        aria-label=\"Decrease quantity\"\n      >\n        <Minus size={16} />\n      </button>\n      \n      <span className=\"px-4 py-1 text-center text-gray-700 flex-1\">\n        {quantity}\n      </span>\n      \n      <button \n        onClick={onIncrease}\n        className=\"px-3 py-1 text-gray-600 hover:bg-gray-100 rounded-r-md\"\n        aria-label=\"Increase quantity\"\n      >\n        <Plus size={16} />\n      </button>\n    </div>\n  );\n};\n\nexport default QuantitySelector;"
        },
        {
            "path": "src/pages/HomePage.tsx",
            "content": "import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ArrowRight, ShieldCheck, Truck, Clock, Star } from 'lucide-react';\nimport { products } from '../data/products';\nimport ProductCard from '../components/ProductCard';\n\nconst HomePage: React.FC = () => {\n  // Get just the first 3 products for the featured section\n  const featuredProducts = products.slice(0, 3);\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-r from-blue-600 to-indigo-700 text-white py-20\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"max-w-2xl\">\n            <h1 className=\"text-4xl md:text-5xl font-bold mb-4\">Shop the Latest Trends</h1>\n            <p className=\"text-xl mb-8\">\n              Discover amazing products at competitive prices. \n              From electronics to home goods, we've got everything you need.\n            </p>\n            <div className=\"flex flex-wrap gap-4\">\n              <Link \n                to=\"/shop\" \n                className=\"bg-white text-blue-600 px-6 py-3 rounded-md font-semibold hover:bg-gray-100 transition-colors\"\n              >\n                Shop Now\n              </Link>\n              <Link \n                to=\"/contact\" \n                className=\"bg-transparent border border-white text-white px-6 py-3 rounded-md font-semibold hover:bg-white hover:text-blue-600 transition-colors\"\n              >\n                Contact Us\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"container mx-auto px-4\">\n          <h2 className=\"text-3xl font-bold text-center mb-12\">Why Shop With Us</h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            <div className=\"flex flex-col items-center text-center\">\n              <div className=\"bg-blue-100 p-3 rounded-full mb-4\">\n                <Truck className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-2\">Free Shipping</h3>\n              <p className=\"text-gray-600\">On all orders over $50</p>\n            </div>\n            \n            <div className=\"flex flex-col items-center text-center\">\n              <div className=\"bg-blue-100 p-3 rounded-full mb-4\">\n                <ShieldCheck className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-2\">Secure Payments</h3>\n              <p className=\"text-gray-600\">100% secure payment</p>\n            </div>\n            \n            <div className=\"flex flex-col items-center text-center\">\n              <div className=\"bg-blue-100 p-3 rounded-full mb-4\">\n                <Clock className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-2\">30-Day Returns</h3>\n              <p className=\"text-gray-600\">30 days money back guarantee</p>\n            </div>\n            \n            <div className=\"flex flex-col items-center text-center\">\n              <div className=\"bg-blue-100 p-3 rounded-full mb-4\">\n                <Star className=\"h-6 w-6 text-blue-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-2\">Quality Products</h3>\n              <p className=\"text-gray-600\">Handpicked items just for you</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Products Section */}\n      <section className=\"py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"flex justify-between items-center mb-8\">\n            <h2 className=\"text-3xl font-bold\">Featured Products</h2>\n            <Link to=\"/shop\" className=\"text-blue-600 hover:text-blue-800 flex items-center\">\n              View All <ArrowRight size={16} className=\"ml-1\" />\n            </Link>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {featuredProducts.map(product => (\n              <ProductCard key={product.id} product={product} />\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"bg-gray-900 text-white py-16\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-3xl font-bold mb-4\">Ready to Start Shopping?</h2>\n          <p className=\"text-xl text-gray-300 mb-8 max-w-2xl mx-auto\">\n            Join thousands of satisfied customers who have discovered the joy of shopping with us.\n          </p>\n          <Link \n            to=\"/shop\" \n            className=\"bg-blue-600 text-white px-8 py-3 rounded-md font-semibold text-lg hover:bg-blue-700 transition-colors inline-block\"\n          >\n            Explore Our Shop\n          </Link>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default HomePage;"
        },
        {
            "path": "src/pages/ShopPage.tsx",
            "content": "import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Filter, Search } from 'lucide-react';\nimport { products } from '../data/products';\nimport ProductCard from '../components/ProductCard';\nimport { Product } from '../types';\n\nconst ShopPage: React.FC = () => {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const categoryParam = queryParams.get('category');\n  \n  const [filteredProducts, setFilteredProducts] = useState<Product[]>(products);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(categoryParam);\n  \n  // Get unique categories from products\n  const categories = Array.from(new Set(products.map(product => product.category)));\n  \n  // Filter products based on search and category\n  useEffect(() => {\n    let results = products;\n    \n    // Filter by category if selected\n    if (selectedCategory) {\n      results = results.filter(product => \n        product.category === selectedCategory\n      );\n    }\n    \n    // Filter by search term\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      results = results.filter(product => \n        product.name.toLowerCase().includes(term) || \n        product.description.toLowerCase().includes(term)\n      );\n    }\n    \n    setFilteredProducts(results);\n  }, [searchTerm, selectedCategory]);\n  \n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-8 text-center\">Shop Our Products</h1>\n      \n      <div className=\"flex flex-col md:flex-row gap-8 mb-8\">\n        {/* Filters Sidebar */}\n        <div className=\"md:w-1/4\">\n          <div className=\"bg-white rounded-lg shadow-md p-6 sticky top-4\">\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-semibold mb-3 flex items-center\">\n                <Filter className=\"h-5 w-5 mr-2\" />\n                Filters\n              </h3>\n              \n              <div className=\"mb-4\">\n                <label htmlFor=\"search\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Search\n                </label>\n                <div className=\"relative\">\n                  <input\n                    type=\"text\"\n                    id=\"search\"\n                    placeholder=\"Search products...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"w-full p-2 border border-gray-300 rounded-md pl-9 focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                  <Search className=\"absolute left-3 top-2.5 h-4 w-4 text-gray-400\" />\n                </div>\n              </div>\n              \n              <div>\n                <h4 className=\"font-medium mb-2\">Categories</h4>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center\">\n                    <input\n                      type=\"radio\"\n                      id=\"all\"\n                      name=\"category\"\n                      checked={selectedCategory === null}\n                      onChange={() => setSelectedCategory(null)}\n                      className=\"h-4 w-4 text-blue-600 focus:ring-blue-500\"\n                    />\n                    <label htmlFor=\"all\" className=\"ml-2 text-gray-700\">\n                      All Categories\n                    </label>\n                  </div>\n                  \n                  {categories.map(category => (\n                    <div key={category} className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        id={category}\n                        name=\"category\"\n                        checked={selectedCategory === category}\n                        onChange={() => setSelectedCategory(category)}\n                        className=\"h-4 w-4 text-blue-600 focus:ring-blue-500\"\n                      />\n                      <label htmlFor={category} className=\"ml-2 text-gray-700 capitalize\">\n                        {category}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Products Grid */}\n        <div className=\"md:w-3/4\">\n          {filteredProducts.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <h3 className=\"text-xl font-medium text-gray-900 mb-2\">No products found</h3>\n              <p className=\"text-gray-500\">Try adjusting your search or filter to find what you're looking for.</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {filteredProducts.map(product => (\n                <ProductCard key={product.id} product={product} />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ShopPage;"
        },
        {
            "path": "src/pages/ProductDetailPage.tsx",
            "content": "import React, { useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { ShoppingCart, Shield, ArrowLeft, Truck } from 'lucide-react';\nimport { useCart } from '../context/CartContext';\nimport { products } from '../data/products';\nimport QuantitySelector from '../components/QuantitySelector';\n\nconst ProductDetailPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const { addToCart } = useCart();\n  \n  const [quantity, setQuantity] = useState(1);\n  \n  // Find the product with the matching ID\n  const product = products.find(p => p.id === id);\n  \n  // If product not found, show error message\n  if (!product) {\n    return (\n      <div className=\"container mx-auto px-4 py-16 text-center\">\n        <h1 className=\"text-2xl font-bold mb-4\">Product Not Found</h1>\n        <p className=\"mb-8\">Sorry, the product you're looking for doesn't exist.</p>\n        <Link \n          to=\"/shop\" \n          className=\"inline-flex items-center text-blue-600 font-medium hover:text-blue-800\"\n        >\n          <ArrowLeft className=\"h-4 w-4 mr-2\" /> Return to Shop\n        </Link>\n      </div>\n    );\n  }\n  \n  // Handle quantity change\n  const handleIncrease = () => setQuantity(q => q + 1);\n  const handleDecrease = () => setQuantity(q => (q > 1 ? q - 1 : 1));\n  \n  // Add to cart with specified quantity\n  const handleAddToCart = () => {\n    addToCart(product, quantity);\n  };\n  \n  // Buy now - add to cart and go to cart page\n  const handleBuyNow = () => {\n    addToCart(product, quantity);\n    navigate('/cart');\n  };\n  \n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <Link \n        to=\"/shop\" \n        className=\"inline-flex items-center text-gray-600 hover:text-gray-900 mb-6\"\n      >\n        <ArrowLeft className=\"h-4 w-4 mr-2\" /> Back to Shop\n      </Link>\n      \n      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n        <div className=\"md:flex\">\n          {/* Product Image */}\n          <div className=\"md:w-1/2\">\n            <img \n              src={product.imageUrl} \n              alt={product.name}\n              className=\"w-full h-96 object-cover object-center\"\n            />\n          </div>\n          \n          {/* Product Details */}\n          <div className=\"md:w-1/2 p-8\">\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">{product.name}</h1>\n            <p className=\"text-3xl font-bold text-gray-900 mb-4\">${product.price.toFixed(2)}</p>\n            \n            <div className=\"mb-6\">\n              <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Description</h3>\n              <p className=\"text-gray-700\">{product.description}</p>\n            </div>\n            \n            <div className=\"mb-6\">\n              <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Category</h3>\n              <p className=\"text-gray-700 capitalize\">{product.category}</p>\n            </div>\n            \n            <div className=\"mb-6\">\n              <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Quantity</h3>\n              <QuantitySelector \n                quantity={quantity}\n                onIncrease={handleIncrease}\n                onDecrease={handleDecrease}\n              />\n            </div>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 mb-8\">\n              <button\n                onClick={handleAddToCart}\n                className=\"flex-1 bg-white border border-blue-600 text-blue-600 py-2 px-4 rounded-md font-medium hover:bg-blue-50 transition-colors flex items-center justify-center\"\n              >\n                <ShoppingCart className=\"h-5 w-5 mr-2\" />\n                Add to Cart\n              </button>\n              \n              <button\n                onClick={handleBuyNow}\n                className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-md font-medium hover:bg-blue-700 transition-colors\"\n              >\n                Buy Now\n              </button>\n            </div>\n            \n            <div className=\"border-t border-gray-200 pt-6\">\n              <div className=\"flex items-center mb-3\">\n                <Shield className=\"h-5 w-5 text-green-600 mr-2\" />\n                <span className=\"text-sm text-gray-700\">Secure payment processing</span>\n              </div>\n              <div className=\"flex items-center\">\n                <Truck className=\"h-5 w-5 text-green-600 mr-2\" />\n                <span className=\"text-sm text-gray-700\">Free shipping on orders over $50</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductDetailPage;"
        },
        {
            "path": "src/pages/CartPage.tsx",
            "content": "import React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Trash2, ShoppingBag, ArrowRight } from 'lucide-react';\nimport { useCart } from '../context/CartContext';\nimport QuantitySelector from '../components/QuantitySelector';\n\nconst CartPage: React.FC = () => {\n  const { cartItems, removeFromCart, updateQuantity, clearCart, subtotal } = useCart();\n  const navigate = useNavigate();\n  \n  const handleCheckout = () => {\n    if (cartItems.length > 0) {\n      navigate('/checkout');\n    }\n  };\n  \n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-8 text-center\">Shopping Cart</h1>\n      \n      {cartItems.length === 0 ? (\n        <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\n          <div className=\"mb-6 flex justify-center\">\n            <ShoppingBag className=\"h-16 w-16 text-gray-400\" />\n          </div>\n          <h2 className=\"text-2xl font-medium text-gray-900 mb-2\">Your cart is empty</h2>\n          <p className=\"text-gray-600 mb-6\">\n            Looks like you haven't added anything to your cart yet.\n          </p>\n          <Link \n            to=\"/shop\" \n            className=\"inline-flex items-center justify-center bg-blue-600 text-white px-6 py-3 rounded-md font-medium hover:bg-blue-700 transition-colors\"\n          >\n            Start Shopping\n          </Link>\n        </div>\n      ) : (\n        <div className=\"flex flex-col lg:flex-row gap-8\">\n          {/* Cart Items */}\n          <div className=\"lg:w-2/3\">\n            <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n              <ul className=\"divide-y divide-gray-200\">\n                {cartItems.map(item => (\n                  <li key={item.product.id} className=\"p-6 flex flex-col sm:flex-row\">\n                    <div className=\"sm:flex-shrink-0 mb-4 sm:mb-0\">\n                      <img \n                        src={item.product.imageUrl} \n                        alt={item.product.name} \n                        className=\"w-full sm:w-24 h-24 object-cover rounded-md\"\n                      />\n                    </div>\n                    \n                    <div className=\"sm:ml-6 flex-1 flex flex-col justify-between\">\n                      <div>\n                        <div className=\"flex justify-between\">\n                          <h3 className=\"text-lg font-medium text-gray-900\">\n                            <Link to={`/product/${item.product.id}`}>\n                              {item.product.name}\n                            </Link>\n                          </h3>\n                          <p className=\"text-lg font-medium text-gray-900\">\n                            ${(item.product.price * item.quantity).toFixed(2)}\n                          </p>\n                        </div>\n                        <p className=\"mt-1 text-sm text-gray-500\">{item.product.category}</p>\n                      </div>\n                      \n                      <div className=\"mt-4 flex items-center justify-between\">\n                        <div className=\"flex-1 max-w-[120px]\">\n                          <QuantitySelector \n                            quantity={item.quantity}\n                            onIncrease={() => updateQuantity(item.product.id, item.quantity + 1)}\n                            onDecrease={() => updateQuantity(item.product.id, item.quantity - 1)}\n                            maxWidth\n                          />\n                        </div>\n                        \n                        <button \n                          onClick={() => removeFromCart(item.product.id)}\n                          className=\"text-red-500 hover:text-red-700 flex items-center\"\n                        >\n                          <Trash2 className=\"h-5 w-5\" />\n                          <span className=\"ml-1 text-sm hidden sm:inline\">Remove</span>\n                        </button>\n                      </div>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n              \n              <div className=\"px-6 py-4 border-t border-gray-200\">\n                <button \n                  onClick={clearCart}\n                  className=\"text-sm text-red-600 hover:text-red-800\"\n                >\n                  Clear Cart\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          {/* Order Summary */}\n          <div className=\"lg:w-1/3\">\n            <div className=\"bg-white rounded-lg shadow-md p-6 sticky top-4\">\n              <h2 className=\"text-lg font-medium text-gray-900 mb-6\">Order Summary</h2>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex justify-between\">\n                  <p className=\"text-gray-600\">Subtotal</p>\n                  <p className=\"text-gray-900 font-medium\">${subtotal.toFixed(2)}</p>\n                </div>\n                \n                <div className=\"flex justify-between\">\n                  <p className=\"text-gray-600\">Shipping</p>\n                  <p className=\"text-gray-900 font-medium\">\n                    {subtotal >= 50 ? 'Free' : '$5.00'}\n                  </p>\n                </div>\n                \n                <div className=\"border-t border-gray-200 pt-4 flex justify-between\">\n                  <p className=\"text-gray-900 font-medium\">Total</p>\n                  <p className=\"text-xl text-gray-900 font-bold\">\n                    ${(subtotal >= 50 ? subtotal : subtotal + 5).toFixed(2)}\n                  </p>\n                </div>\n              </div>\n              \n              <button \n                onClick={handleCheckout}\n                className=\"mt-6 w-full bg-blue-600 text-white py-3 px-4 rounded-md font-medium hover:bg-blue-700 transition-colors flex items-center justify-center\"\n              >\n                Proceed to Checkout\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </button>\n              \n              <div className=\"mt-6\">\n                <Link \n                  to=\"/shop\" \n                  className=\"text-blue-600 hover:text-blue-800 text-sm flex items-center justify-center\"\n                >\n                  Continue Shopping\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CartPage;"
        },
        {
            "path": "src/pages/CheckoutPage.tsx",
            "content": "import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CreditCard, ShieldCheck } from 'lucide-react';\nimport { useCart } from '../context/CartContext';\nimport { ShippingDetails } from '../types';\nimport { toast } from '../components/ui/use-toast';\n\nconst CheckoutPage: React.FC = () => {\n  const { cartItems, subtotal, clearCart } = useCart();\n  const navigate = useNavigate();\n  \n  const shipping = subtotal >= 50 ? 0 : 5;\n  const total = subtotal + shipping;\n  \n  const [shippingDetails, setShippingDetails] = useState<ShippingDetails>({\n    firstName: '',\n    lastName: '',\n    email: '',\n    address: '',\n    city: '',\n    postalCode: '',\n    country: '',\n  });\n  \n  const [paymentDetails, setPaymentDetails] = useState({\n    cardNumber: '',\n    cardName: '',\n    expiry: '',\n    cvv: '',\n  });\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  // Redirect to home if cart is empty\n  React.useEffect(() => {\n    if (cartItems.length === 0) {\n      navigate('/');\n    }\n  }, [cartItems, navigate]);\n  \n  const handleShippingChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setShippingDetails(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const handlePaymentChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setPaymentDetails(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    // Simulate checkout process\n    setTimeout(() => {\n      // Process successful checkout\n      clearCart();\n      toast({\n        title: \"Order Placed Successfully!\",\n        description: \"Your order has been placed. Thank you for shopping with us!\",\n      });\n      navigate('/');\n      setIsSubmitting(false);\n    }, 1500);\n  };\n  \n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-8 text-center\">Checkout</h1>\n      \n      <div className=\"flex flex-col lg:flex-row gap-8\">\n        {/* Checkout Form */}\n        <div className=\"lg:w-2/3\">\n          <form onSubmit={handleSubmit}>\n            {/* Shipping Information */}\n            <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n              <h2 className=\"text-xl font-medium text-gray-900 mb-4\">Shipping Information</h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    First Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    required\n                    value={shippingDetails.firstName}\n                    onChange={handleShippingChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Last Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    required\n                    value={shippingDetails.lastName}\n                    onChange={handleShippingChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email Address\n                  </label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    required\n                    value={shippingDetails.email}\n                    onChange={handleShippingChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Address\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"address\"\n                    name=\"address\"\n                    required\n                    value={shippingDetails.address}\n                    onChange={handleShippingChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    City\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"city\"\n                    name=\"city\"\n                    required\n                    value={shippingDetails.city}\n                    onChange={handleShippingChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"postalCode\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Postal Code\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"postalCode\"\n                    name=\"postalCode\"\n                    required\n                    value={shippingDetails.postalCode}\n                    onChange={handleShippingChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"country\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Country\n                  </label>\n                  <select\n                    id=\"country\"\n                    name=\"country\"\n                    required\n                    value={shippingDetails.country}\n                    onChange={handleShippingChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  >\n                    <option value=\"\">Select Country</option>\n                    <option value=\"us\">United States</option>\n                    <option value=\"ca\">Canada</option>\n                    <option value=\"uk\">United Kingdom</option>\n                    <option value=\"au\">Australia</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            \n            {/* Payment Information */}\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\n              <h2 className=\"text-xl font-medium text-gray-900 mb-4 flex items-center\">\n                <CreditCard className=\"h-5 w-5 mr-2 text-blue-500\" />\n                Payment Information\n              </h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"cardNumber\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Card Number\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"cardNumber\"\n                    name=\"cardNumber\"\n                    placeholder=\"XXXX XXXX XXXX XXXX\"\n                    required\n                    value={paymentDetails.cardNumber}\n                    onChange={handlePaymentChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"cardName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Name on Card\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"cardName\"\n                    name=\"cardName\"\n                    required\n                    value={paymentDetails.cardName}\n                    onChange={handlePaymentChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"expiry\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Expiry Date (MM/YY)\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"expiry\"\n                    name=\"expiry\"\n                    placeholder=\"MM/YY\"\n                    required\n                    value={paymentDetails.expiry}\n                    onChange={handlePaymentChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"cvv\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    CVV\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"cvv\"\n                    name=\"cvv\"\n                    placeholder=\"XXX\"\n                    required\n                    value={paymentDetails.cvv}\n                    onChange={handlePaymentChange}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"mt-6 flex items-center text-sm text-gray-500\">\n                <ShieldCheck className=\"h-5 w-5 mr-2 text-green-500\" />\n                Your payment information is secure and encrypted\n              </div>\n            </div>\n            \n            <div className=\"mt-6 lg:hidden\">\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-md font-medium hover:bg-blue-700 transition-colors disabled:bg-blue-400 disabled:cursor-not-allowed\"\n              >\n                {isSubmitting ? 'Processing...' : `Complete Order • $${total.toFixed(2)}`}\n              </button>\n            </div>\n          </form>\n        </div>\n        \n        {/* Order Summary */}\n        <div className=\"lg:w-1/3\">\n          <div className=\"bg-white rounded-lg shadow-md p-6 sticky top-4\">\n            <h2 className=\"text-xl font-medium text-gray-900 mb-4\">Order Summary</h2>\n            \n            <ul className=\"mb-4 divide-y divide-gray-200\">\n              {cartItems.map(item => (\n                <li key={item.product.id} className=\"py-3 flex justify-between\">\n                  <div>\n                    <p className=\"text-gray-900\">{item.product.name}</p>\n                    <p className=\"text-gray-500 text-sm\">Qty: {item.quantity}</p>\n                  </div>\n                  <span className=\"text-gray-900 font-medium\">\n                    ${(item.product.price * item.quantity).toFixed(2)}\n                  </span>\n                </li>\n              ))}\n            </ul>\n            \n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between\">\n                <p className=\"text-gray-600\">Subtotal</p>\n                <p className=\"text-gray-900 font-medium\">${subtotal.toFixed(2)}</p>\n              </div>\n              \n              <div className=\"flex justify-between\">\n                <p className=\"text-gray-600\">Shipping</p>\n                <p className=\"text-gray-900 font-medium\">\n                  {shipping === 0 ? 'Free' : `$${shipping.toFixed(2)}`}\n                </p>\n              </div>\n              \n              <div className=\"border-t border-gray-200 pt-3 flex justify-between\">\n                <p className=\"text-gray-900 font-medium\">Total</p>\n                <p className=\"text-xl text-gray-900 font-bold\">\n                  ${total.toFixed(2)}\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"mt-6 hidden lg:block\">\n              <button\n                type=\"submit\"\n                form=\"checkout-form\"\n                disabled={isSubmitting}\n                className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-md font-medium hover:bg-blue-700 transition-colors disabled:bg-blue-400 disabled:cursor-not-allowed\"\n              >\n                {isSubmitting ? 'Processing...' : 'Complete Order'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutPage;"
        },
        {
            "path": "src/pages/ContactPage.tsx",
            "content": "import React, { useState } from 'react';\nimport { Mail, Phone, MapPin, Send } from 'lucide-react';\nimport { toast } from '../components/ui/use-toast';\n\nconst ContactPage: React.FC = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  \n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    // Simulate form submission\n    setTimeout(() => {\n      toast({\n        title: \"Message Sent\",\n        description: \"Thanks for reaching out! We'll get back to you soon.\",\n      });\n      \n      // Reset form\n      setFormData({\n        name: '',\n        email: '',\n        subject: '',\n        message: ''\n      });\n      \n      setIsSubmitting(false);\n    }, 1000);\n  };\n  \n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-2 text-center\">Contact Us</h1>\n      <p className=\"text-gray-600 mb-8 text-center max-w-xl mx-auto\">\n        Get in touch with our team for any questions, feedback, or support needs. We're here to help!\n      </p>\n      \n      <div className=\"flex flex-col lg:flex-row gap-8\">\n        {/* Contact Information */}\n        <div className=\"lg:w-1/3\">\n          <div className=\"bg-blue-600 text-white rounded-lg shadow-md p-8 h-full\">\n            <h2 className=\"text-2xl font-bold mb-6\">Contact Information</h2>\n            \n            <div className=\"space-y-6\">\n              <div className=\"flex items-start\">\n                <MapPin className=\"h-6 w-6 mr-4 mt-0.5\" />\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Our Location</h3>\n                  <p>123 Commerce St, Shopville, NY 10001, United States</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <Phone className=\"h-6 w-6 mr-4 mt-0.5\" />\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Phone Number</h3>\n                  <p>(555) 123-4567</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <Mail className=\"h-6 w-6 mr-4 mt-0.5\" />\n                <div>\n                  <h3 className=\"font-semibold mb-1\">Email Address</h3>\n                  <p>info@shopsmart.com</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"mt-12\">\n              <h3 className=\"font-semibold mb-4\">Business Hours</h3>\n              <ul className=\"space-y-2\">\n                <li className=\"flex justify-between\">\n                  <span>Monday - Friday:</span>\n                  <span>9:00 AM - 8:00 PM</span>\n                </li>\n                <li className=\"flex justify-between\">\n                  <span>Saturday:</span>\n                  <span>10:00 AM - 6:00 PM</span>\n                </li>\n                <li className=\"flex justify-between\">\n                  <span>Sunday:</span>\n                  <span>Closed</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        \n        {/* Contact Form */}\n        <div className=\"lg:w-2/3\">\n          <div className=\"bg-white rounded-lg shadow-md p-8\">\n            <h2 className=\"text-2xl font-bold mb-6\">Send Us a Message</h2>\n            \n            <form onSubmit={handleSubmit}>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                <div>\n                  <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Your Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    required\n                    value={formData.name}\n                    onChange={handleChange}\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email Address\n                  </label>\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    required\n                    value={formData.email}\n                    onChange={handleChange}\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  />\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"subject\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Subject\n                  </label>\n                  <select\n                    id=\"subject\"\n                    name=\"subject\"\n                    required\n                    value={formData.subject}\n                    onChange={handleChange}\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  >\n                    <option value=\"\">Select a subject</option>\n                    <option value=\"order\">Order Inquiry</option>\n                    <option value=\"product\">Product Information</option>\n                    <option value=\"return\">Returns & Refunds</option>\n                    <option value=\"support\">Technical Support</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Message\n                  </label>\n                  <textarea\n                    id=\"message\"\n                    name=\"message\"\n                    rows={6}\n                    required\n                    value={formData.message}\n                    onChange={handleChange}\n                    className=\"w-full p-3 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\n                  ></textarea>\n                </div>\n              </div>\n              \n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"bg-blue-600 text-white py-3 px-6 rounded-md font-medium hover:bg-blue-700 transition-colors flex items-center justify-center disabled:bg-blue-400 disabled:cursor-not-allowed\"\n              >\n                {isSubmitting ? (\n                  'Sending...'\n                ) : (\n                  <>\n                    <Send className=\"h-4 w-4 mr-2\" />\n                    Send Message\n                  </>\n                )}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n      \n      {/* Map Section */}\n      <div className=\"mt-12 bg-white rounded-lg shadow-md p-6\">\n        <h2 className=\"text-2xl font-bold mb-6\">Find Us</h2>\n        <div className=\"aspect-video bg-gray-200 rounded-md\">\n          {/* Placeholder for map - in a real app, you would embed Google Maps or similar here */}\n          <div className=\"h-full w-full flex items-center justify-center\">\n            <MapPin className=\"h-12 w-12 text-gray-400 mr-2\" />\n            <span className=\"text-xl text-gray-500\">Map Placeholder</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactPage;"
        },
        {
            "path": "src/App.tsx",
            "content": "import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { CartProvider } from './context/CartContext';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport HomePage from './pages/HomePage';\nimport ShopPage from './pages/ShopPage';\nimport ProductDetailPage from './pages/ProductDetailPage';\nimport CartPage from './pages/CartPage';\nimport CheckoutPage from './pages/CheckoutPage';\nimport ContactPage from './pages/ContactPage';\nimport { Toaster } from './components/ui/toaster';\n\nfunction App() {\n  return (\n    <Router>\n      <CartProvider>\n        <div className=\"flex flex-col min-h-screen bg-gray-50\">\n          <Navbar />\n          \n          <main className=\"flex-grow\">\n            <Routes>\n              <Route path=\"/\" element={<HomePage />} />\n              <Route path=\"/shop\" element={<ShopPage />} />\n              <Route path=\"/product/:id\" element={<ProductDetailPage />} />\n              <Route path=\"/cart\" element={<CartPage />} />\n              <Route path=\"/checkout\" element={<CheckoutPage />} />\n              <Route path=\"/contact\" element={<ContactPage />} />\n            </Routes>\n          </main>\n          \n          <Footer />\n          <Toaster />\n        </div>\n      </CartProvider>\n    </Router>\n  );\n}\n\nexport default App;"
        }
    ]
}